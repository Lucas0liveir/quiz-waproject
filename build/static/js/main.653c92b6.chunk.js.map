{"version":3,"sources":["utils/shuffle.ts","utils/htmlEntity.ts","service/api.ts","contexts/questions.tsx","components/GroupButtons/index.tsx","components/StartBox/styles.mui.ts","components/StartBox/index.tsx","assets/logo.svg","components/NavBar/index.tsx","routes/home/styles.mui.ts","components/Footer/index.tsx","routes/home/index.tsx","components/Card/styles.mui.tsx","components/Resume/styles.mui.ts","components/Resume/index.tsx","components/Card/index.tsx","routes/history/index.tsx","routes/quiz/styles.mui.ts","components/MainBox/styles.mui.ts","components/MainBox/index.tsx","routes/quiz/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["shuffle","array","randomIndex","currentIndex","length","Math","floor","random","htmlEntity","badString","replace","api","axios","create","baseURL","QuestionsContext","createContext","results","QuestionProvider","props","useState","init","setInit","amount","setAmount","questions","setQuestions","currentQuestion","setCurrentQuestion","onResume","setOnResume","showScore","setShowScore","score","setScore","useEffect","a","get","data","push","questionHelper","forEach","element","answerOptionsHelper","type","answerText0","incorrect_answers","answerText1","answerText2","answerText4","correct_answer","answerText","isCorrect","selected","answerOptions","questionText","question","alert","getQuestionsAndTransformStructureOfQuestions","Provider","value","handleAnswerOptionClick","answerOption","Object","assign","color","nextQuestion","helperQuestions","date","moment","format","stringQuestions","localStorage","getItem","savedQuestions","JSON","parse","unshift","removeItem","setItem","stringify","children","GroupButtons","useContext","style","width","display","flexDirection","flexWrap","Button","marginRight","marginBottom","onClick","e","Number","currentTarget","innerText","variant","useStyles","makeStyles","root","margin","alignItems","justifyContent","minHeight","height","borderRadius","padding","boxShadow","textAlign","contentButtons","groupButtons","stack","StartBox","classes","Container","className","Stack","spacing","direction","textDecoration","to","grow","flexGrow","logo","position","marginLeft","NavBar","url","window","location","origin","AppBar","src","alt","Toolbar","href","Footer","marginTop","Home","cards","resume","fontSize","divisor","border","questionCount","span","answerSection","Resume","setResume","myResume","map","index","Fragment","backgroundColor","Grow","in","transformOrigin","timeout","HistoryBox","savedQuestion","Card","paddingBottom","CardContent","Typography","CardActions","History","setSavedQuestions","HelperQuestions","Grid","container","item","MainBox","growQuestions","Quiz","App","CssBaseline","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.653c92b6.chunk.js","sourcesContent":["function shuffle(array: any[]): any[] {\r\n    let currentIndex = array.length, randomIndex;\r\n\r\n    while (currentIndex !== 0) {\r\n\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex--;\r\n\r\n        [array[currentIndex], array[randomIndex]] = [\r\n            array[randomIndex], array[currentIndex]];\r\n    }\r\n\r\n    return array;\r\n\r\n}\r\n\r\nexport { shuffle }","function htmlEntity(badString: string): string {\r\n    return badString.replace(/&amp;/g, \"&\")\r\n    .replace(/&quot;/g, \"\\\"\")\r\n    .replace(/&apos;/g, \"'\")\r\n    .replace(/&gt;/g, \">\")\r\n    .replace(/&lt;/g, \"<\")\r\n    .replace(/&#039;/g, \"'\")\r\n    .replace(/&aacute;/g, \"á\")\r\n    .replace(/&eacute;/g, \"é\")\r\n}\r\n\r\nexport { htmlEntity }","import axios from \"axios\";\r\n\r\nexport const api = axios.create({\r\n    baseURL: 'https://opentdb.com',\r\n})","import { createContext, Dispatch, ReactNode, SetStateAction, useEffect, useState } from \"react\"\r\nimport { shuffle } from \"../utils/shuffle\"\r\nimport { htmlEntity } from \"../utils/htmlEntity\"\r\nimport { api } from '../service/api'\r\nimport moment from 'moment'\r\n\r\ntype IAnswerOptions = {\r\n    answerText: string,\r\n    isCorrect: boolean,\r\n    color?: string,\r\n    selected: boolean\r\n}\r\n\r\nexport type IQuestion = {\r\n    questionText: string;\r\n    answerOptions: IAnswerOptions[]\r\n}\r\n\r\ntype IQuestionsContext = {\r\n    amount: number;\r\n    setAmount: Dispatch<SetStateAction<number>>;\r\n    questions: IQuestion[];\r\n    currentQuestion: number;\r\n    setCurrentQuestion: Dispatch<SetStateAction<number>>;\r\n    showScore: boolean;\r\n    setShowScore: Dispatch<SetStateAction<boolean>>;\r\n    score: number\r\n    setScore: Dispatch<SetStateAction<number>>;\r\n    init: boolean;\r\n    setInit: Dispatch<SetStateAction<boolean>>;\r\n    handleAnswerOptionClick: (answerOptions: IAnswerOptions) => void;\r\n    onResume: boolean;\r\n    setOnResume: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\ntype IResultQuestions = {\r\n    correct_answer: string;\r\n    incorrect_answers: string[];\r\n    question: string;\r\n    type: string;\r\n}\r\n\r\nexport type IQuestionsHelper = {\r\n    score: number;\r\n    date: string;\r\n    questions: IQuestion[]\r\n}\r\ntype IQuestionProvider = {\r\n    children: ReactNode\r\n}\r\n\r\nexport const QuestionsContext = createContext({} as IQuestionsContext)\r\n\r\nconst results: IResultQuestions[] = []\r\nexport function QuestionProvider(props: IQuestionProvider) {\r\n\r\n    const [init, setInit] = useState<boolean>(false)\r\n    const [amount, setAmount] = useState<number>(0)\r\n    const [questions, setQuestions] = useState<IQuestion[]>([])\r\n    const [currentQuestion, setCurrentQuestion] = useState(0)\r\n    const [onResume, setOnResume] = useState<boolean>(false)\r\n    const [showScore, setShowScore] = useState(false)\r\n    const [score, setScore] = useState(0)\r\n\r\n    function handleAnswerOptionClick(answerOption: IAnswerOptions): void {\r\n        if (answerOption.isCorrect) {\r\n            Object.assign(answerOption, { selected: true, color: \"green\" })\r\n            setScore(score + 1);\r\n        }\r\n\r\n        if (!answerOption.isCorrect) {\r\n            Object.assign(answerOption, { selected: true, color: \"red\" })\r\n            questions[currentQuestion].answerOptions.forEach(element => {\r\n                if (element.isCorrect) {\r\n                    element.color = \"green\"\r\n                }\r\n            })\r\n        }\r\n\r\n        const nextQuestion = currentQuestion + 1;\r\n        if (nextQuestion < questions.length) {\r\n            setCurrentQuestion(nextQuestion)\r\n        } else {\r\n            const helperQuestions: IQuestionsHelper[] = []\r\n            const date = moment().format('LLL')\r\n            const stringQuestions: string = localStorage.getItem('@quizSavedQuestions') as string\r\n            const savedQuestions: IQuestionsHelper[] = JSON.parse(stringQuestions)\r\n\r\n            if (savedQuestions) {\r\n                savedQuestions.unshift({ score, date, questions })\r\n                localStorage.removeItem('@quizSavedQuestions')\r\n                localStorage.setItem('@quizSavedQuestions', JSON.stringify(savedQuestions))\r\n\r\n            }\r\n\r\n            if (!savedQuestions) {\r\n                helperQuestions.unshift({ score, date, questions })\r\n                localStorage.setItem('@quizSavedQuestions', JSON.stringify(helperQuestions))\r\n            }\r\n\r\n            setShowScore(true)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function getQuestionsAndTransformStructureOfQuestions() {\r\n            try {\r\n                const { data } = await api.get(`api.php?amount=${amount}`)\r\n                \r\n                \r\n                results.push(...data.results)\r\n\r\n                const questionHelper: IQuestion[] = []\r\n                results.forEach(element => {\r\n                    const answerOptionsHelper: IAnswerOptions[] = []\r\n                    if (element.type === 'multiple') {\r\n                        const answerText0 = htmlEntity(element.incorrect_answers[0])\r\n                        const answerText1 = htmlEntity(element.incorrect_answers[1])\r\n                        const answerText2 = htmlEntity(element.incorrect_answers[2])\r\n                        const answerText4 = htmlEntity(element.correct_answer)\r\n\r\n                        answerOptionsHelper.push(\r\n                            {\r\n                                answerText: answerText0, isCorrect: false, selected: false\r\n                            },\r\n                            {\r\n                                answerText: answerText1, isCorrect: false, selected: false\r\n                            },\r\n                            {\r\n                                answerText: answerText2, isCorrect: false, selected: false\r\n                            },\r\n                            {\r\n                                answerText: answerText4, isCorrect: true, selected: false\r\n                            }\r\n                        )\r\n\r\n                    }\r\n\r\n                    if (element.type === 'boolean') {\r\n                        const answerText0 = htmlEntity(element.incorrect_answers[0])\r\n                        const answerText1 = htmlEntity(element.correct_answer)\r\n                        answerOptionsHelper.push(\r\n                            {\r\n                                answerText: answerText1, isCorrect: true, selected: false\r\n                            },\r\n                            {\r\n                                answerText: answerText0, isCorrect: false, selected: false\r\n                            })\r\n                    }\r\n                    const answerOptions = shuffle(answerOptionsHelper)\r\n                    const questionText = htmlEntity(element.question)\r\n\r\n                    questionHelper.push({\r\n                        questionText: questionText,\r\n                        answerOptions\r\n                    })\r\n\r\n                })\r\n\r\n                setQuestions(questionHelper)\r\n\r\n            } catch (error) {\r\n                alert(\"Ocorreu um erro ao buscar as questões, tente novamente!\");\r\n            }\r\n        }\r\n        \r\n            getQuestionsAndTransformStructureOfQuestions()\r\n\r\n    }, [amount])\r\n\r\n\r\n    return (\r\n\r\n        <QuestionsContext.Provider value={{\r\n            onResume, setOnResume,\r\n            setAmount, init, setInit,\r\n            amount, questions, currentQuestion, setCurrentQuestion,\r\n            showScore, setShowScore, score, setScore, handleAnswerOptionClick\r\n        }}>\r\n            {props.children}\r\n        </QuestionsContext.Provider>\r\n    )\r\n\r\n}","import { Button } from \"@mui/material\";\r\nimport { useContext } from \"react\";\r\nimport { QuestionsContext } from '../../contexts/questions'\r\n\r\nfunction GroupButtons() {\r\n\r\n    const { setAmount } = useContext(QuestionsContext)\r\n\r\n    return (\r\n        <>\r\n            <div style={{width: \"100%\", display: \"flex\", flexDirection: 'row', flexWrap: \"wrap\"}}>\r\n                <Button style={{marginRight: 5, marginBottom: 5}} onClick={(e) => setAmount(Number(e.currentTarget.innerText))} color=\"primary\" variant=\"contained\">05</Button>\r\n                <Button style={{marginRight: 5, marginBottom: 5}} onClick={(e) => setAmount(Number(e.currentTarget.innerText))} variant=\"contained\">10</Button>\r\n                <Button style={{marginRight: 5, marginBottom: 5}} onClick={(e) => setAmount(Number(e.currentTarget.innerText))} variant=\"contained\">15</Button>\r\n                <Button style={{marginRight: 5, marginBottom: 5}} onClick={(e) => setAmount(Number(e.currentTarget.innerText))} variant=\"contained\">25</Button>\r\n                <Button style={{marginRight: 5, marginBottom: 5}} onClick={(e) => setAmount(Number(e.currentTarget.innerText))} variant=\"contained\">30</Button>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport { GroupButtons }","import { makeStyles } from \"@material-ui/styles\"\r\n\r\nconst useStyles = makeStyles({\r\n\troot: {\r\n\t\tdisplay: \"flex\",\r\n\t\tmargin: \"200px auto\",\t\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t\tflexDirection: \"column\",\r\n\t\tminHeight: 150,\r\n\t\theight: 'min-content',\r\n\t\tborderRadius: 15,\r\n\t\tpadding: 20,\r\n\t\tboxShadow: \"10px 10px 42px 0px rgba(0, 0, 0, 0.75)\",\r\n\t\ttextAlign: \"center\"\r\n\t},\r\n\tcontentButtons: {\r\n\t\tdisplay: \"flex\",\r\n\t\tmargin: \"150px -150px 0 0\",\r\n\t\twidth: '100%',\r\n\t\talignItems: \"center\",\r\n\t\tflexDirection: \"column\",\r\n\t\tjustifyContent: \"center\",\r\n\t\tminHeight: 200,\r\n\t\theight: 'min-content',\r\n\t\tborderRadius: 15,\r\n\t\tpadding: 20,\r\n\t\tboxShadow: \"10px 10px 42px 0px rgba(0, 0, 0, 0.75)\",\r\n\t\ttextAlign: \"center\"\r\n\t},\r\n\tgroupButtons: {\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\"\r\n\t},\r\n\tstack: {\r\n\t\tdisplay: \"flex\",\r\n\t\theight: \"100%\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\"\r\n\t}\r\n})\r\n\r\nexport { useStyles }","import { useContext } from \"react\";\r\nimport { QuestionsContext } from '../../contexts/questions'\r\nimport { Button, Container, Stack } from '@mui/material'\r\nimport { GroupButtons } from '../GroupButtons'\r\nimport { useStyles } from './styles.mui'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction StartBox() {\r\n\r\n    const classes = useStyles()\r\n    const { amount, setAmount } = useContext(QuestionsContext)\r\n\r\n    return (\r\n        <Container >\r\n            {amount > 0 ? (\r\n                <div className={classes.root}>\r\n                    <h2>Are you ready?</h2>\r\n                    <Stack className={classes.stack} spacing={2} direction=\"row\" flexWrap={'wrap'}>\r\n                        <Button style={{width: '40%', marginBottom: 10}} color=\"success\" variant=\"contained\"><Link style={{textDecoration: 'none', color: '#fff' }} to='/quiz'>Start</Link></Button>\r\n                        <Button style={{width: '40%', marginBottom: 10}} onClick={() => setAmount(0)} color=\"error\" variant=\"contained\">Cancel</Button>\r\n                    </Stack>\r\n\r\n                </div>\r\n            ) :\r\n                <div className={classes.contentButtons}>\r\n                    <h1>\r\n                        How many Questions you want to answer?\r\n                    </h1>\r\n                    <div className={classes.groupButtons}>\r\n                        <GroupButtons />\r\n                    </div>\r\n                </div>\r\n            }\r\n        </Container >\r\n    )\r\n}\r\n\r\nexport default StartBox","export default __webpack_public_path__ + \"static/media/logo.6bbe30b6.svg\";","import { AppBar, Toolbar, Button, Stack } from \"@mui/material\"\r\nimport logo from '../../assets/logo.svg'\r\nimport { makeStyles } from \"@material-ui/styles\"\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles({\r\n    grow: {\r\n        flexGrow: 1\r\n    },\r\n    logo: {\r\n        position: 'fixed',\r\n        width: 120,\r\n        height: 60,\r\n        marginLeft: 15\r\n    }\r\n})\r\n\r\nexport default function NavBar() {\r\n    const url = window.location.origin\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div>\r\n            <AppBar>\r\n               <img className={classes.logo} src={logo} alt=\"logo\" />\r\n\r\n                <Toolbar>\r\n                    <div className={classes.grow} />\r\n                    <Stack spacing={2} direction='row'>\r\n                        <Button onClick={()=> {\r\n                            window.location.href = url\r\n                        }} color='inherit' variant=\"outlined\">Home</Button>\r\n                        <Button color='inherit' variant=\"outlined\"><Link style={{textDecoration: 'none', color: '#fff' }} to='/history'>History</Link></Button>\r\n                    </Stack>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n        </div>\r\n    )\r\n}","import { makeStyles } from \"@material-ui/styles\"\r\n\r\nconst useStyles = makeStyles({\r\n\troot: {\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        flexDirection: \"column\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n\t}\r\n})\r\n\r\nexport { useStyles }","\r\n\r\nexport function Footer () {\r\n    return (\r\n\r\n        <footer style={{marginTop: 50, display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'flex-end'}}>\r\n            <p>Made with 💙, Created by <a style={{textDecoration: 'none', color: 'black'}}href=\"https://github.com/Lucas0liveir\">Lucas Oliveira</a></p>\r\n        </footer>\r\n    )\r\n}","import StartBox from '../../components/StartBox'\r\nimport NavBar from '../../components/NavBar'\r\nimport { useStyles } from './styles.mui'\r\nimport { Footer } from '../../components/Footer'\r\n\r\nexport default function Home() {\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <>\r\n            <NavBar />\r\n            <main className={classes.root}>\r\n                <StartBox />\r\n            </main>\r\n            <Footer />\r\n        </>\r\n\r\n    )\r\n}","import { makeStyles } from \"@material-ui/styles\"\r\n\r\nconst useStyles = makeStyles({\r\n\troot: {\r\n\t\twidth: '100%',\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'flex-start',\r\n\t\tflexDirection: 'row',\r\n\t\t\r\n\t},\r\n\tcards: {\r\n\t\twidth: \"100%\",\r\n\t\tminHeight: 200,\r\n\t\theight: 'min-content',\r\n\t\tborderRadius: 15,\r\n\t\tpadding: 20,\r\n\t\tboxShadow: \"10px 10px 25px 0px rgba(0, 0, 0, 0.55)\",\r\n\t},\r\n\tresume: {\r\n\t\twidth: \"100%\",\r\n\t\theight: \"100%\",\r\n\t\tborderRadius: 15,\r\n\t\tpadding: 20,\r\n\t\tboxShadow: \"10px 10px 25px 0px rgba(0, 0, 0, 0.75)\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\tflexDirection: \"column\"\r\n\t}\r\n\t\r\n})\r\n\r\nexport { useStyles }","import { makeStyles } from \"@material-ui/styles\"\r\n\r\nconst useStyles = makeStyles({\r\n\troot: {\r\n\t\twidth: \"85%\",\r\n\t\tminHeight: 200,\r\n\t\theight: 'min-content',\r\n\t\tborderRadius: 15,\r\n\t\tpadding: 20,\r\n\t\tboxShadow: \"10px 10px 42px 0px rgba(0, 0, 0, 0.75)\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\tflexDirection: \"column\"\r\n\t},\r\n\tscore: {\r\n\t\tdisplay: \"flex\",\r\n\t\tfontSize: 24,\r\n\t\talignItems: \"center\"\r\n\t},\r\n\tquestions: {\r\n\t\twidth: \"100%\",\r\n\t\tposition: \"relative\"\r\n\t},\r\n\tdivisor: {\r\n\t\tmarginTop: 15,\r\n\t\twidth: \"100%\",\r\n\t\tborder: \"1px solid grey\"\r\n\t},\r\n\tquestionCount: {\r\n\t\tmarginBottom: 20\r\n\t},\r\n\tspan: {\r\n\t\tfontSize: 28,\r\n\t},\r\n\tquestionText: {\r\n\t\tmarginBottom: 12\r\n\t},\r\n\tanswerSection: {\r\n\t\twidth: \"100%\",\r\n\t\tdisplay: \"flex\",\r\n\t\tmarginTop: 15,\r\n\t\tflexDirection: \"column\",\r\n\t\tjustifyContent: \"space-between\"\r\n\t},\r\n\tspacing: {\r\n\t\tmarginTop: 15\r\n\t}\r\n})\r\n\r\nexport { useStyles }","import React, { Dispatch, SetStateAction, useContext } from 'react'\r\nimport { QuestionsContext, IQuestion } from \"../../contexts/questions\"\r\nimport { useStyles } from \"./styles.mui\";\r\nimport { Button, Grow } from '@mui/material'\r\nimport CheckIcon from '@mui/icons-material/Check'\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\n\r\n\r\ntype props = {\r\n    resume: boolean;\r\n    setResume: Dispatch<SetStateAction<boolean>>;\r\n    questions: IQuestion[]\r\n}\r\n\r\nfunction Resume({ questions, resume, setResume }: props) {\r\n    const classes = useStyles()\r\n    const { onResume, setOnResume } = useContext(QuestionsContext)\r\n    const myResume = (\r\n        <div className={classes.root}>\r\n            <div style={{ width: '100%', display: 'flex', justifyContent: 'flex-end'}}>\r\n                <Button onClick={()=>{\r\n                    if (onResume) {\r\n                        setOnResume(false)\r\n                        setResume(false)\r\n                    } else {\r\n                        window.location.href = `${window.location.origin}`\r\n                    }\r\n                }} variant='outlined'>X</Button>\r\n            </div>\r\n\r\n            {\r\n                questions.map((question, index) => (\r\n                    <>\r\n                        <div className={classes.questions}>\r\n                            <div className={classes.questionCount}>\r\n                                <span className={classes.span}>Question {index + 1}</span>\r\n                            </div>\r\n                            <div className={classes.questionText}>\r\n                                {question.questionText}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.answerSection}>\r\n                            {question.answerOptions.map((answerOption, index) => (\r\n                                <React.Fragment>\r\n                                    <div className={classes.spacing} />\r\n                                    <div style={{ width: '100%', display: 'flex', flexDirection: 'row' }}>\r\n                                        <Button style={{ backgroundColor: answerOption.color, width: '95%' }} className={classes.spacing} variant='contained' >{answerOption.answerText}</Button>\r\n                                        {answerOption.selected && answerOption.isCorrect && <CheckIcon style={{ marginRight: -2 }} color='success' /> ||\r\n                                            answerOption.selected && !answerOption.isCorrect &&\r\n                                            <ClearIcon style={{ marginRight: -22 }} color='error' />\r\n                                        }\r\n                                    </div>\r\n\r\n                                </React.Fragment>\r\n                            ))\r\n                            }\r\n                        </div>\r\n                        <div className={classes.divisor} />\r\n                    </>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n    return (\r\n        <>\r\n            {resume &&\r\n                <>\r\n                    <Grow in={resume} style={{ transformOrigin: '0 0 0' }}\r\n                        {...(resume ? { timeout: 1000 } : {})}>\r\n                        {myResume}\r\n                    </Grow>\r\n                </>\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport { Resume }","import React from 'react'\r\nimport { useStyles } from './styles.mui'\r\nimport { IQuestionsHelper } from '../../contexts/questions'\r\nimport { Resume } from '../Resume'\r\nimport { Button, CardActions } from '@mui/material'\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport { useState } from 'react';\r\n\r\ntype ISavedQuestion = {\r\n    onResume: boolean\r\n    setOnResume: React.Dispatch<React.SetStateAction<boolean>>\r\n    savedQuestion: IQuestionsHelper\r\n}\r\n\r\nexport default function HistoryBox({ savedQuestion, onResume, setOnResume }: ISavedQuestion) {\r\n\r\n    const [resume, setResume] = useState<boolean>(false)\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {resume ?\r\n                <>\r\n                    <div className={classes.resume}>\r\n                        <Resume resume={resume} questions={savedQuestion.questions} setResume={setResume} />\r\n                    </div>\r\n                </>\r\n\r\n                :\r\n                !onResume &&\r\n                <div className={classes.cards}>\r\n                    <Card style={{width: 200, paddingBottom: 10}}>\r\n                        <CardContent>\r\n                            <Typography variant='subtitle1'>\r\n                                You scored {savedQuestion.score} points\r\n                            </Typography>\r\n                            <div style={{ marginTop: 10 }} />\r\n                            <Typography variant='subtitle2'>\r\n                                {savedQuestion.date}\r\n                            </Typography>\r\n                        </CardContent>\r\n                        <CardActions>\r\n                            <Button onClick={() => {\r\n                                setResume(!resume)\r\n                                setOnResume(true)\r\n                            }} variant='outlined'>Details</Button>\r\n                        </CardActions>\r\n                    </Card>\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","import Card from \"../../components/Card\"\r\nimport NavBar from \"../../components/NavBar\"\r\nimport { IQuestionsHelper } from '../../contexts/questions'\r\nimport { useContext } from \"react\"\r\nimport { QuestionsContext } from \"../../contexts/questions\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { Grid, Typography } from '@mui/material'\r\nimport { makeStyles } from \"@material-ui/styles\"\r\nimport Skeleton from 'react-loading'\r\n\r\nexport default function History() {\r\n\r\n    const [savedQuestions, setSavedQuestions] = useState<IQuestionsHelper[] | null>([])\r\n    const { setOnResume, onResume } = useContext(QuestionsContext)\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: !onResume ? 'flex-start' : 'center',\r\n            width: '100%',\r\n            margin: '100px 0 0 50px',\r\n            flexDirection: 'row',\r\n            flexWrap: 'wrap'\r\n\r\n        }\r\n    })\r\n\r\n    const classes = useStyles()\r\n\r\n\r\n    useEffect(() => {\r\n        const HelperQuestions = localStorage.getItem('@quizSavedQuestions')\r\n        if (HelperQuestions) {\r\n            setSavedQuestions(JSON.parse(HelperQuestions))\r\n        }\r\n        else {\r\n            setSavedQuestions(null)\r\n        }\r\n    }, [])\r\n\r\n    if (savedQuestions?.length === 0) {\r\n        return (\r\n            <Skeleton />\r\n        )\r\n    }\r\n    return (\r\n        <div style={{display: 'flex'}}>\r\n            <NavBar />\r\n            <div className={classes.root}>\r\n\r\n                {savedQuestions ?\r\n                    <>\r\n                        <Grid container spacing={2}>\r\n                            {savedQuestions.map((element, index) => (\r\n                                <Grid key={index} item>\r\n                                    <Card setOnResume={setOnResume} onResume={onResume} savedQuestion={element} />\r\n                                </Grid>\r\n                            )\r\n\r\n                            )\r\n\r\n                            }\r\n\r\n                        </Grid>\r\n                    </>\r\n                    : (\r\n                        <>\r\n                            <Typography variant='h4'> Ops... You still haven't answered any quiz. </Typography>\r\n\r\n                        </>)\r\n\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\"\r\n\r\nconst useStyles = makeStyles({\r\n\troot: {\r\n        marginTop: 100,\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        flexDirection: \"column\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n\t}\r\n})\r\n\r\nexport { useStyles }","import { makeStyles } from \"@material-ui/styles\"\r\n\r\nconst useStyles = makeStyles({\r\n\troot: {\r\n\t\twidth: \"100%\",\r\n\t\tmargin: \"auto\",\r\n\t\theight: \"100%\",\r\n\t\tborderRadius: 15,\r\n\t\tpadding: 20,\r\n\t\tboxShadow: \"10px 10px 42px 0px rgba(0, 0, 0, 0.75)\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\tflexDirection: \"column\"\r\n\t},\r\n\tcontainer: {\r\n\t\twidth: 450,\r\n\t\tminHeight: 200,\r\n\t\theight: 'min-content',\r\n\t\tborderRadius: 15,\r\n\t\tpadding: 20,\r\n\t\tboxShadow: \"10px 10px 42px 0px rgba(0, 0, 0, 0.75)\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"space-evenly\"\r\n\t},\r\n\tscore: {\r\n\t\tdisplay: \"flex\",\r\n\t\tfontSize: 24,\r\n\t\talignItems: \"center\",\r\n\t\tmarginBottom: 15\r\n\t},\r\n\tquestions: {\r\n\t\twidth: \"100%\",\r\n\t\tposition: \"relative\"\r\n\t},\r\n\tquestionCount: {\r\n\t\tmarginBottom: 20\r\n\t},\r\n\tspan: {\r\n\t\tfontSize: 28,\r\n\t},\r\n\tquestionText: {\r\n\t\tmarginBottom: 12\r\n\t},\r\n\tanswerSection: {\r\n\t\twidth: \"100%\",\r\n\t\tdisplay: \"flex\",\r\n\t\tmarginTop: 15,\r\n\t\tflexDirection: \"column\",\r\n\t\tjustifyContent: \"space-between\"\r\n\t},\r\n\tspacing: {\r\n\t\tmarginTop: 15\r\n\t}\r\n})\r\n\r\nexport { useStyles }","import React, { useContext, useState } from \"react\";\r\nimport { QuestionsContext } from '../../contexts/questions'\r\nimport { Container, Grow } from '@mui/material'\r\nimport { useStyles } from \"./styles.mui\";\r\nimport Button from '@mui/material/Button'\r\nimport { Resume } from \"../Resume\"\r\n\r\nfunction MainBox() {\r\n\tconst [resume, setResume] = useState<boolean>(false)\r\n\tconst classes = useStyles()\r\n\tconst { score, showScore, questions, currentQuestion, handleAnswerOptionClick } = useContext(QuestionsContext)\r\n\r\n\tif (questions.length === 0) {\r\n\t\tconst url = window.location.origin\r\n\t\twindow.location.href = url\r\n\t}\r\n\t\r\n\tconst growQuestions = (\r\n\t\t<Container className={classes.container}>\r\n\t\t\t<>\r\n\t\t\t\t<div className={classes.questions}>\r\n\t\t\t\t\t<div className={classes.questionCount}>\r\n\t\t\t\t\t\t<span className={classes.span}>Question {currentQuestion + 1}</span>/{questions.length}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={classes.questionText}>\r\n\t\t\t\t\t\t{questions.length > 1 && questions[currentQuestion].questionText}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classes.answerSection}>\r\n\t\t\t\t\t{questions.length > 1 && questions[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t<React.Fragment key={answerOption.answerText} >\r\n\t\t\t\t\t\t\t<div key={answerOption.answerText} className={classes.spacing} />\r\n\t\t\t\t\t\t\t<Button className={classes.spacing} variant=\"contained\"\r\n\t\t\t\t\t\t\t\tonClick={() => handleAnswerOptionClick(answerOption)}>{answerOption.answerText}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t</Container>\r\n\t)\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className={classes.score}>\r\n\t\t\t\t\t\t<h2 style={{ margin: 0 }}>You scored {score} points out of {questions.length}</h2>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{!resume ?\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t<Button onClick={() => setResume(true)} variant=\"contained\">Resume</Button>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t<Resume resume={resume} questions={questions} setResume={setResume}/>\r\n\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t</>\r\n\r\n\t\t\t)\r\n\r\n\t\t\t\t: (\r\n\t\t\t\t\t<Grow in={!showScore}>\r\n\t\t\t\t\t\t{growQuestions}\r\n\t\t\t\t\t</Grow>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</div >\r\n\r\n\r\n\r\n\t)\r\n\r\n}\r\n\r\nexport default MainBox","import { useStyles } from './styles.mui'\r\nimport MainBox from '../../components/MainBox'\r\nimport NavBar from '../../components/NavBar'\r\n\r\nexport default function Quiz() {\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <>\r\n            <NavBar />\r\n            <main className={classes.root}>\r\n                <MainBox />\r\n            </main>\r\n        </>\r\n\r\n    )\r\n}","import { Route, Routes, BrowserRouter } from 'react-router-dom'\nimport { CssBaseline } from '@mui/material'\nimport Home from './routes/home'\nimport History from './routes/history'\nimport Quiz from './routes/quiz'\nimport './global.css'\n\nfunction App() {\n\n  return (\n    <>\n      <CssBaseline />\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"quiz\" element={<Quiz />} />\n          <Route path=\"history\" element={<History />} />\n        </Routes>\n      </BrowserRouter>\n    </>\n\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { QuestionProvider } from './contexts/questions'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <QuestionProvider>\n      <App />\n    </QuestionProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}